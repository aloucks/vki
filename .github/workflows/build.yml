name: build
on:
  schedule:
    # build twice a day to keep the cache warm
    # "0 6,18 * * *"
    - cron: "0/5 * * * *"

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        toolchain: [stable, nightly]
    steps:
      - uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        id: rust
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          profile: minimal
      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: update
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-
      - name: Cache cargo build target
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ matrix.toolchain }}-${{ steps.rust.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-target-${{ matrix.toolchain }}-${{ steps.rust.outputs.rustc_hash }}-
      - name: Install GLFW dependencies
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt update
          sudo apt install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev
      - name: Build everything
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --lib --tests --examples
